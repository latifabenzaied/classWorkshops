{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class AddApartmentComponent {\n  constructor(fb) {\n    this.fb = fb;\n  }\n  ngOnInit() {\n    this.myForm = this.fb.group({\n      apartmentNumber: ['', [Validators.required]],\n      floorNumber: ['', [Validators.required, Validators.email]],\n      surface: ['', Validators.required],\n      terrace: ['', Validators.required],\n      surfaceTerrace: ['', Validators.required],\n      category: ['', Validators.required],\n      residence: ['', Validators.required]\n    });\n  }\n  static {\n    this.ɵfac = function AddApartmentComponent_Factory(t) {\n      return new (t || AddApartmentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddApartmentComponent,\n      selectors: [[\"app-add-apartment\"]],\n      decls: 31,\n      vars: 1,\n      consts: [[3, \"formGroup\"], [\"for\", \"apartmentNumber\"], [\"id\", \"apartmentNumber\", \"formControlName\", \"apartmentNumber\"], [\"for\", \"floorNumber\"], [\"id\", \"floorNumber\", \"formControlName\", \"floorNumber\"], [\"for\", \"surface\"], [\"type\", \"text\", \"id\", \"surface\", \"formControlName\", \"surface\"], [\"type\", \"radio\", \"value\", \"yes\", \"formControlName\", \"terrace\", \"checked\", \"\"], [\"type\", \"radio\", \"value\", \"no\", \"formControlName\", \"terrace\"], [\"for\", \"surfaceTerrace\"], [\"id\", \"surfaceTerrace\", \"formControlName\", \"surfaceTerrace\"], [\"type\", \"radio\", \"value\", \"\", \"formControlName\", \"category\"], [\"type\", \"radio\", \"formControlName\", \"category\"], [\"for\", \"residence\"], [\"id\", \"residence\", \"formControlName\", \"residence\"]],\n      template: function AddApartmentComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0)(1, \"label\", 1);\n          i0.ɵɵtext(2, \" Apartment Number\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(3, \"input\", 2);\n          i0.ɵɵelementStart(4, \"label\", 3);\n          i0.ɵɵtext(5, \" Floor Number\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"input\", 4);\n          i0.ɵɵelementStart(7, \"label\", 5);\n          i0.ɵɵtext(8, \" Surface\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 6);\n          i0.ɵɵelementStart(10, \"label\");\n          i0.ɵɵtext(11, \" Terrace\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 7);\n          i0.ɵɵtext(13, \"yes \");\n          i0.ɵɵelement(14, \"input\", 8);\n          i0.ɵɵtext(15, \"no \");\n          i0.ɵɵelementStart(16, \"label\", 9);\n          i0.ɵɵtext(17, \" Suraface Terrace\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"input\", 10);\n          i0.ɵɵelementStart(19, \"label\");\n          i0.ɵɵtext(20, \" Category \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"input\", 11)(22, \"input\", 12)(23, \"input\", 12);\n          i0.ɵɵelementStart(24, \"label\", 13);\n          i0.ɵɵtext(25, \" Residence \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(26, \"input\", 14);\n          i0.ɵɵelementStart(27, \"button\");\n          i0.ɵɵtext(28, \"Add\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"button\");\n          i0.ɵɵtext(30, \"Reset\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.RadioControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","AddApartmentComponent","constructor","fb","ngOnInit","myForm","group","apartmentNumber","required","floorNumber","email","surface","terrace","surfaceTerrace","category","residence","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","AddApartmentComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty"],"sources":["C:\\Users\\latifa\\Desktop\\classWorkshops\\src\\app\\Apartment\\add-apartment\\add-apartment.component.ts","C:\\Users\\latifa\\Desktop\\classWorkshops\\src\\app\\Apartment\\add-apartment\\add-apartment.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-add-apartment',\n  templateUrl: './add-apartment.component.html',\n  styleUrls: ['./add-apartment.component.css']\n})\nexport class AddApartmentComponent implements OnInit {\n  myForm !: FormGroup\n  constructor(public fb: FormBuilder) {}\n\n  ngOnInit(): void {\n\n    this.myForm=this.fb.group({\n      apartmentNumber: ['', [Validators.required]],\n      floorNumber: ['', [Validators.required, Validators.email]],\n      surface: ['', Validators.required],\n      terrace: ['', Validators.required],\n      surfaceTerrace: ['', Validators.required],\n      category: ['', Validators.required],\n      residence: ['', Validators.required],\n\n    })\n  }\n\n\n}\n","<form [formGroup]=\"myForm\" >\n  <label for=\"apartmentNumber\"> Apartment Number</label>\n  <input  id=\"apartmentNumber\" formControlName=\"apartmentNumber\">\n\n  <label for=\"floorNumber\"> Floor Number</label>\n  <input  id=\"floorNumber\" formControlName=\"floorNumber\">\n\n  <label for=\"surface\"> Surface</label>\n  <input   type =\"text\" id=\"surface\"formControlName=\"surface\">\n\n  <label> Terrace</label>\n  <input   type =\"radio\" value=\"yes\" formControlName=\"terrace\" checked>yes\n  <input   type =\"radio\" value=\"no\"  formControlName=\"terrace\">no\n\n  <label for=\"surfaceTerrace\"> Suraface Terrace</label>\n  <input  id=\"surfaceTerrace\" formControlName=\"surfaceTerrace\">\n\n  <label  > Category </label>\n  <input   type =\"radio\"  value=\"\" formControlName=\"category\">\n  <input   type =\"radio\"  formControlName=\"category\">\n  <input   type =\"radio\"  formControlName=\"category\">\n\n  <label for=\"residence\"> Residence </label>\n  <input  id=\"residence\" formControlName=\"residence\">\n  <button>Add</button>\n  <button>Reset</button>\n\n</form>\n"],"mappings":"AACA,SAAgCA,UAAU,QAAO,gBAAgB;;;AAOjE,OAAM,MAAOC,qBAAqB;EAEhCC,YAAmBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;EAAgB;EAErCC,QAAQA,CAAA;IAEN,IAAI,CAACC,MAAM,GAAC,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MACxBC,eAAe,EAAE,CAAC,EAAE,EAAE,CAACP,UAAU,CAACQ,QAAQ,CAAC,CAAC;MAC5CC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACU,KAAK,CAAC,CAAC;MAC1DC,OAAO,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACQ,QAAQ,CAAC;MAClCI,OAAO,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACQ,QAAQ,CAAC;MAClCK,cAAc,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACQ,QAAQ,CAAC;MACzCM,QAAQ,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACQ,QAAQ,CAAC;MACnCO,SAAS,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACQ,QAAQ;KAEpC,CAAC;EACJ;;;uBAhBWP,qBAAqB,EAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAArBlB,qBAAqB;MAAAmB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCRlCV,EAAA,CAAAY,cAAA,cAA4B;UACIZ,EAAA,CAAAa,MAAA,wBAAgB;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UACtDd,EAAA,CAAAe,SAAA,eAA+D;UAE/Df,EAAA,CAAAY,cAAA,eAAyB;UAACZ,EAAA,CAAAa,MAAA,oBAAY;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UAC9Cd,EAAA,CAAAe,SAAA,eAAuD;UAEvDf,EAAA,CAAAY,cAAA,eAAqB;UAACZ,EAAA,CAAAa,MAAA,eAAO;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UACrCd,EAAA,CAAAe,SAAA,eAA4D;UAE5Df,EAAA,CAAAY,cAAA,aAAO;UAACZ,EAAA,CAAAa,MAAA,gBAAO;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UACvBd,EAAA,CAAAe,SAAA,gBAAqE;UAAAf,EAAA,CAAAa,MAAA,YACrE;UAAAb,EAAA,CAAAe,SAAA,gBAA6D;UAAAf,EAAA,CAAAa,MAAA,WAE7D;UAAAb,EAAA,CAAAY,cAAA,gBAA4B;UAACZ,EAAA,CAAAa,MAAA,yBAAgB;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UACrDd,EAAA,CAAAe,SAAA,iBAA6D;UAE7Df,EAAA,CAAAY,cAAA,aAAS;UAACZ,EAAA,CAAAa,MAAA,kBAAS;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UAC3Bd,EAAA,CAAAe,SAAA,iBAA4D;UAI5Df,EAAA,CAAAY,cAAA,iBAAuB;UAACZ,EAAA,CAAAa,MAAA,mBAAU;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UAC1Cd,EAAA,CAAAe,SAAA,iBAAmD;UACnDf,EAAA,CAAAY,cAAA,cAAQ;UAAAZ,EAAA,CAAAa,MAAA,WAAG;UAAAb,EAAA,CAAAc,YAAA,EAAS;UACpBd,EAAA,CAAAY,cAAA,cAAQ;UAAAZ,EAAA,CAAAa,MAAA,aAAK;UAAAb,EAAA,CAAAc,YAAA,EAAS;;;UAzBlBd,EAAA,CAAAgB,UAAA,cAAAL,GAAA,CAAAtB,MAAA,CAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}